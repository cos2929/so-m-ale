name: sol-m-ale

on:
  schedule:
    - cron: "*/1 * * * *"   # runs every minute (UTC)
  workflow_dispatch: {}      # manual "Run workflow" button

permissions:
  contents: write            # needed to push state.json back to the repo

jobs:
  alerts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install requests

      - name: Run bot
        env:
          # RPC
          RPC_HTTP: https://api.mainnet-beta.solana.com

          # Your inputs (set these in: Settings → Secrets and variables → Actions → Variables/Secrets)
          WALLET_LIST:  ${{ vars.WALLET_LIST }}     # one wallet per line
          AMM_PROGRAMS: ${{ vars.AMM_PROGRAMS }}    # one program id per line
          SWAP_PROGRAMS: ${{ vars.SWAP_PROGRAMS }}  # one program id per line
          LAUNCH_PROGRAMS: ${{ vars.LAUNCH_PROGRAMS }}

          # Alerts (Discord required; Telegram optional)
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT:  ${{ secrets.TG_CHAT }}

          # Connected-wallet scan knobs (tune if needed)
          CONNECT_CHECKS_PER_RUN: "4"          # how many new connected wallets to mint-check per run
          HISTORY_PAGES_PER_CONNECTED: "2"     # pages of history per connected wallet (2 × 100 tx)
          HISTORY_PAGE_LIMIT: "100"            # tx per page

        run: python bot.py

      - name: Save state back to repo
        if: always()
        run: |
          if [ -f state.json ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add state.json
            git commit -m "chore: update state [skip ci]" || echo "No changes to commit"
            git push
          fi
