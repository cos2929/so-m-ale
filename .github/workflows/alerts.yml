name: so-m-ale alerts (continuous run, manual start/stop)

on:
  workflow_dispatch: {}      # manual trigger only

permissions:
  contents: write

jobs:
  alerts:
    runs-on: ubuntu-latest
    timeout-minutes: 50
    strategy:
      fail-fast: false
      matrix:
        shard_index: [0, 1, 2, 3]
    concurrency:
      group: so-m-ale-shard-${{ matrix.shard_index }}
      cancel-in-progress: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install "requests>=2.31,<2.33" python-dotenv solders

      - name: Config summary
        env:
          WALLET_LIST:     ${{ vars.WALLET_LIST }}
          AMM_PROGRAMS:    ${{ vars.AMM_PROGRAMS }}
          LAUNCH_PROGRAMS: ${{ vars.LAUNCH_PROGRAMS }}
        run: |
          echo "Shard index: ${{ matrix.shard_index }}"
          echo "Shard total: 4"
          if [ -n "$WALLET_LIST" ]; then
            echo "Has WALLET_LIST: yes"
            echo "WALLET_LIST entries: $(printf '%s\n' "$WALLET_LIST" | sed '/^\s*$/d;/^\s*#/d' | wc -l)"
          else
            echo "Has WALLET_LIST: no"
          fi
          echo "AMM_PROGRAMS lines:  $(printf '%s\n' "$AMM_PROGRAMS"  | sed '/^\s*$/d;/^\s*#/d' | wc -l)"
          echo "LAUNCH_PROGRAMS lines: $(printf '%s\n' "$LAUNCH_PROGRAMS" | sed '/^\s*$/d;/^\s*#/d' | wc -l)"

      - name: Prepare Git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          BRANCH="${GITHUB_REF_NAME:-$GITHUB_HEAD_REF}"
          git fetch origin "$BRANCH" || true
          git pull --rebase origin "$BRANCH" || true

      - name: Run bot (continuous until cancelled)
        env:
          RPC_HTTP: https://api.mainnet-beta.solana.com
          WALLET_LIST:  ${{ vars.WALLET_LIST }}
          AMM_PROGRAMS: ${{ vars.AMM_PROGRAMS }}
          LAUNCH_PROGRAMS: ${{ vars.LAUNCH_PROGRAMS }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT:  ${{ secrets.TG_CHAT }}
          CONNECT_CHECKS_PER_RUN: "4"
          HISTORY_PAGE_LIMIT: "100"
          VERBOSE: "1"
          SHARD_INDEX: ${{ matrix.shard_index }}
          SHARD_TOTAL: "4"
          STATE_FILE: state_${{ matrix.shard_index }}.json
          INTERVAL_SECONDS: "15"
        shell: bash
        run: |
          echo "Shard $SHARD_INDEX/$SHARD_TOTAL â€” running continuously until cancelled, checking every ${INTERVAL_SECONDS}s"
          while true; do
            echo "::group::shard $SHARD_INDEX iteration $((i++))"
            python bot.py || echo "bot.py exit code $?"
            if [ -f "$STATE_FILE" ]; then
              git add "$STATE_FILE"
              git commit -m "chore: update $STATE_FILE [skip ci]" || echo "No state changes"
              git push || echo "Push failed; continuing"
            fi
            if [ -f "bot.log" ]; then
              git add "bot.log"
              git commit -m "chore: update bot.log [skip ci]" || echo "No log changes"
              git push || echo "Push failed; continuing"
            fi
            echo "::endgroup::"
            sleep "$INTERVAL_SECONDS"
          done
